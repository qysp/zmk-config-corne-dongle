/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define QWERTY  0
#define COLEMAK 1
#define NAV     2
#define NUM     3
#define SYM     4
#define ADJ     5

#define ALPHAS  QWERTY COLEMAK

/ {
        combos {
    	        compatible = "zmk,combos";

                combo_capsword {
                        timeout-ms = <50>;
                        key-positions = <24 35>;
                        bindings = <&caps_word>;
                        layers = <ALPHAS>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                layer_Qwerty {
                        bindings = <
   &kp ESC   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp TAB   &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M &kp COMMA  &kp DOT &kp FSLH &kp RSHFT
      &kp LCTRL &lt NAV LGUI &lt NUM SPACE   &kp ENTER &mo SYM &mt RALT DEL 
                        >;
                };

                layer_Colemak {
                        bindings = <
   &kp ESC   &kp Q &kp W &kp F &kp P &kp B   &kp J &kp L  &kp U     &kp Y   &kp SEMI &kp BSPC
   &kp TAB   &kp A &kp R &kp S &kp T &kp G   &kp M &kp N  &kp E     &kp I   &kp O    &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp D &kp V   &kp K &kp H &kp COMMA  &kp DOT &kp FSLH &kp RSHFT
      &kp LCTRL &lt NAV LGUI &lt NUM SPACE   &kp ENTER &mo SYM &mt RALT DEL 
                        >;
                };

                layer_Navigation {
                        bindings = <
   &none  &none &none &none &none     &none      &none    &none    &none  &kp PG_DN &kp PG_UP &none
   &none  &none &none &none &kp LCTRL &kp LALT   &kp LEFT &kp DOWN &kp UP &kp RIGHT &none     &none
   &trans &none &none &none &none     &none      &none    &none    &none  &none     &none     &none
                             &none &none &none   &kp LALT &mo ADJ  &none
                        >;
                };

                layer_Numbers {
                        bindings = <
   &none &none &kp F9 &kp F10 &kp F11 &kp F12   &kp KP_PLUS  &kp N7 &kp N8 &kp N9 &kp KP_SLASH    &none
   &none &none &kp F5 &kp F6  &kp F7  &kp F8    &kp N0       &kp N4 &kp N5 &kp N6 &kp KP_DOT      &none
   &none &none &kp F1 &kp F2  &kp F3  &kp F4    &kp KP_MINUS &kp N1 &kp N2 &kp N3 &kp KP_ASTERISK &none
                            &none &none &none   &kp KP_EQUAL &kp KP_ENTER &none
                        >;
                };

                layer_Symbols {
                        bindings = <
   &kp GRAVE &kp EXCL  &kp AT   &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS &kp ASTRK &none    &none    &trans
   &trans    &kp SLASH &kp LBKT &kp LBRC &kp LPAR &kp EQUAL   &kp MINUS &kp RPAR &kp RBRC  &kp RBKT &kp BSLH &kp DQT
   &trans    &none     &none    &none    &none    &none       &none     &none    &none     &none    &none    &trans
                                  &none &none &kp LC(SPACE)   &none     &none    &none
                        >;
                };

                layer_Adjustment {
                        bindings = <
   &none &none &kp C_VOL_DN &kp C_MUTE &kp C_VOL_UP &none   &none      &none        &none        &none        &none        &none 
   &none &none &kp C_PREV   &kp C_PP   &kp C_NEXT   &none   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
   &none &none &none        &none      &none        &none   &none      &none        &none        &none        &none        &none
                                        &none &none &none   &none &none &none  
                        >;
                };
        };
};
